# Generated by Django 4.0.3 on 2024-09-23 10:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_type', models.CharField(choices=[('treatment', 'Лечение'), ('consultation', 'Консультация'), ('diagnostics', 'Диагностика'), ('inspection', 'Осмотр'), ('sanitation', 'Санация')], default='treatment', max_length=255, verbose_name='Тип записи')),
                ('appointment_date', models.DateTimeField(verbose_name='Назначенная дата')),
                ('duration', models.IntegerField(default=30, verbose_name='Длительность')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('sent', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Запись на прием',
                'verbose_name_plural': 'Запись на прием',
            },
        ),
        migrations.CreateModel(
            name='PatientSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.branch')),
            ],
            options={
                'verbose_name': 'Источник пациентов',
                'verbose_name_plural': 'Источник пациентов',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=255, verbose_name='Ф.И.О')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('image', models.TextField(blank=True, verbose_name='Фото')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('gender', models.CharField(choices=[('male', 'Мужчина'), ('female', 'Женщина')], max_length=255, verbose_name='Пол')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('last_visit', models.DateTimeField(null=True, verbose_name='Дата последнего визита стоматолога')),
                ('doc_type', models.CharField(choices=[('passport', 'Паспорт'), ('metrics', 'Метрика')], max_length=255, verbose_name='Тип документа')),
                ('doc_series', models.CharField(max_length=255, verbose_name='Серия документа')),
                ('doc_number', models.CharField(max_length=7, verbose_name='Номер документа')),
                ('status', models.CharField(choices=[('active', 'Активный'), ('disabled', 'Не активный')], default='active', max_length=255, verbose_name='Статус')),
                ('chat_id', models.BigIntegerField(default=0, verbose_name='Телеграм айди')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.branch')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
    ]
